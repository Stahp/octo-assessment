{"ast":null,"code":"var _jsxFileName = \"/home/youssouf/Desktop/Stahp/octo-assessment-main/octo-assessment-frontend-master/src/components/Create/CreateSpace.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { keycloakAuth, insertSpace } from '../../redux';\n\nclass createSpace extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      description: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, \"Name:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 40\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"name\",\n      name: \"name\",\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 76\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"Description:\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 54\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: this.state.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 97\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Add Space\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    spaceData: state.space,\n    authData: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    insertSpace: (token, space) => dispatch(insertSpace(token, space)),\n    keycloakAuth: () => dispatch(keycloakAuth())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(createSpace);","map":{"version":3,"sources":["/home/youssouf/Desktop/Stahp/octo-assessment-main/octo-assessment-frontend-master/src/components/Create/CreateSpace.js"],"names":["React","connect","keycloakAuth","insertSpace","createSpace","Component","constructor","props","state","name","description","handleChange","bind","handleSubmit","event","setState","value","target","alert","preventDefault","render","mapStateToProps","spaceData","space","authData","auth","mapDispatchToProps","dispatch","token"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,aAA1C;;AAEA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAyC;AACvCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,WAAW,EAAE;AAAxB,KAAb;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACC;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AACpB,SAAKC,QAAL,CAAc;AAACC,MAAAA,KAAK,EAAEF,KAAK,CAACG,MAAN,CAAaD;AAArB,KAAd;AACC;;AAEDH,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBI,IAAAA,KAAK,CAAC,2BAA2B,KAAKV,KAAL,CAAWQ,KAAvC,CAAL;AACAF,IAAAA,KAAK,CAACK,cAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKP,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,GAAG,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eACiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADjC,eAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,MAAtB;AAA6B,MAAA,IAAI,EAAC,MAAlC;AAAyC,MAAA,KAAK,EAAG,KAAKL,KAAL,CAAWC,IAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAEqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFrE,eAGE;AAAO,MAAA,GAAG,EAAC,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHF,eAG+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAH/C,eAIE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,aAAtB;AAAoC,MAAA,IAAI,EAAC,aAAzC;AAAuD,MAAA,KAAK,EAAG,KAAKD,KAAL,CAAWE,WAA1E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,eAI0F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJ1F,eAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,WAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA3BsC;;AA8BzC,MAAMW,eAAe,GAAGb,KAAK,IAAI;AAC7B,SAAO;AACHc,IAAAA,SAAS,EAAEd,KAAK,CAACe,KADd;AAEHC,IAAAA,QAAQ,EAAEhB,KAAK,CAACiB;AAFb,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHxB,IAAAA,WAAW,EAAE,CAACyB,KAAD,EAAQL,KAAR,KAAkBI,QAAQ,CAACxB,WAAW,CAACyB,KAAD,EAAQL,KAAR,CAAZ,CADpC;AAEHrB,IAAAA,YAAY,EAAE,MAAMyB,QAAQ,CAACzB,YAAY,EAAb;AAFzB,GAAP;AAIH,CALD;;AAOA,eAAeD,OAAO,CAClBoB,eADkB,EAElBK,kBAFkB,CAAP,CAGbtB,WAHa,CAAf","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux';\nimport { keycloakAuth, insertSpace } from '../../redux';\n\nclass createSpace extends React.Component{\n  constructor(props){\n  super(props);\n  this.state = {name: \"\", description: \"\"};\n  this.handleChange = this.handleChange.bind(this);\n  this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n  this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label for=\"name\">Name:</label><br/>\n        <input type=\"text\" id=\"name\" name=\"name\" value= {this.state.name}/><br/>\n        <label for=\"description\">Description:</label><br/>\n        <input type=\"text\" id=\"description\" name=\"description\" value= {this.state.description}/><br/>\n        <input type=\"submit\" value=\"Add Space\" />\n      </form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n    return {\n        spaceData: state.space,\n        authData: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        insertSpace: (token ,space) => dispatch(insertSpace(token, space)),\n        keycloakAuth: () => dispatch(keycloakAuth())\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(createSpace)\n"]},"metadata":{},"sourceType":"module"}