{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mouss\\\\OneDrive\\\\Desktop\\\\octo-assessment\\\\octo-assessment-frontend-master\\\\src\\\\components\\\\Detail\\\\SpaceDetail.js\";\nimport React, { useEffect } from 'react';\nimport { fetchSpaceById } from '../../redux';\nimport { connect } from 'react-redux';\nimport SpaceDetailForm from './SpaceDetailForm/SpaceDetailForm';\nimport { withRouter } from 'react-router-dom';\n\nfunction SpaceDetail(props) {\n  debugger;\n  var regex = /.*\\/(\\d+)/;\n  var spaceId = window.location.href.match(regex)[1];\n  useEffect(() => {\n    //const spaceId= props.spaceId      // this is how i should do it\n    //but this is a very sloppy way of doing it because i can't stay stuck here ...\n    props.fetchSpaceById(props.authData.kc.token, spaceId);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, props.spaceData.loading ? /*#__PURE__*/React.createElement(SpaceDetailForm, {\n    space: props.spaceData.space,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }) : console.log('Loading ...'));\n}\n\nconst mapStateToProps = state => {\n  return {\n    spaceData: state.space,\n    authData: state.auth\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchSpaceById: (token, id) => dispatch(fetchSpaceById(token, id))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SpaceDetail));","map":{"version":3,"sources":["C:/Users/mouss/OneDrive/Desktop/octo-assessment/octo-assessment-frontend-master/src/components/Detail/SpaceDetail.js"],"names":["React","useEffect","fetchSpaceById","connect","SpaceDetailForm","withRouter","SpaceDetail","props","regex","spaceId","window","location","href","match","authData","kc","token","spaceData","loading","space","console","log","mapStateToProps","state","auth","mapDispatchToProps","dispatch","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA2B;AACvB;AACA,MAAIC,KAAK,GAAE,WAAX;AACA,MAAIC,OAAO,GAAEC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2BL,KAA3B,EAAkC,CAAlC,CAAb;AAEFP,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEA;AAEAM,IAAAA,KAAK,CAACL,cAAN,CAAqBK,KAAK,CAACO,QAAN,CAAeC,EAAf,CAAkBC,KAAvC,EAA8CP,OAA9C;AACH,GANQ,EAMN,EANM,CAAT;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIF,KAAK,CAACU,SAAN,CAAgBC,OAAhB,gBACI,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAGX,KAAK,CAACU,SAAN,CAAgBE,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,GAGIC,OAAO,CAACC,GAAR,CAAY,aAAZ,CALR,CADF;AAWD;;AAGD,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHN,IAAAA,SAAS,EAAEM,KAAK,CAACJ,KADd;AAEHL,IAAAA,QAAQ,EAAES,KAAK,CAACC;AAFb,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHxB,IAAAA,cAAc,EAAE,CAACc,KAAD,EAAQW,EAAR,KAAeD,QAAQ,CAACxB,cAAc,CAACc,KAAD,EAAQW,EAAR,CAAf;AADpC,GAAP;AAGH,CAJD;;AAMA,eAAetB,UAAU,CAACF,OAAO,CAC7BmB,eAD6B,EAE7BG,kBAF6B,CAAP,CAGxBnB,WAHwB,CAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\nimport { fetchSpaceById } from '../../redux';\nimport { connect } from 'react-redux';\nimport SpaceDetailForm from './SpaceDetailForm/SpaceDetailForm'\nimport {withRouter} from 'react-router-dom'\n\nfunction SpaceDetail(props){\n    debugger;\n    var regex= /.*\\/(\\d+)/;\n    var spaceId= window.location.href.match(regex)[1];\n\n  useEffect(() => {\n      //const spaceId= props.spaceId      // this is how i should do it\n\n      //but this is a very sloppy way of doing it because i can't stay stuck here ...\n\n      props.fetchSpaceById(props.authData.kc.token, spaceId);\n  }, [])\n  return(\n    <div>\n    {\n        props.spaceData.loading ?\n            <SpaceDetailForm space= {props.spaceData.space}/>\n            :\n            console.log('Loading ...')\n    }\n\n    </div>\n  )\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        spaceData: state.space,\n        authData: state.auth\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchSpaceById: (token, id) => dispatch(fetchSpaceById(token, id))\n    }\n}\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SpaceDetail))\n"]},"metadata":{},"sourceType":"module"}