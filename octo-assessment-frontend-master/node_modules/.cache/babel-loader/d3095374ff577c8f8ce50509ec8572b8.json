{"ast":null,"code":"import { FETCH_SPACES_REQUEST, FETCH_SPACES_SUCCESS, FETCH_SPACES_FAILURE, INSERT_SPACES_REQUEST, INSERT_SPACES_SUCCESS, INSERT_SPACES_FAILURE } from './spaceTypes';\nimport axios from 'axios';\nimport { ZUUL_URL, ASSESSMENT_SERVICE_URL } from '../../resources/api';\n\nconst fetchSpacesRequest = () => {\n  return {\n    type: FETCH_SPACES_REQUEST\n  };\n};\n\nconst fetchSpacesSuccess = spaces => {\n  return {\n    type: FETCH_SPACES_SUCCESS,\n    payload: spaces\n  };\n};\n\nconst fetchSpacesFailure = error => {\n  return {\n    type: FETCH_SPACES_FAILURE,\n    payload: error\n  };\n};\n\nconst insertSpacesRequest = () => {\n  return {\n    type: INSERT_SPACES_REQUEST\n  };\n};\n\nconst insertSpacesSuccess = spaces => {\n  return {\n    type: INSERT_SPACES_SUCCESS,\n    payload: spaces\n  };\n};\n\nconst insertSpacesFailure = error => {\n  return {\n    type: INSERT_SPACES_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchSpaces = token => {\n  return dispatch => {\n    debugger;\n    dispatch(fetchSpacesRequest);\n    axios.get(ASSESSMENT_SERVICE_URL + 'spaces', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(token);\n      const spaces = response.data._embedded.spaces;\n      dispatch(fetchSpacesSuccess(spaces));\n    }).catch(error => {\n      const errorMsg = error.message;\n      dispatch(fetchSpacesFailure(errorMsg));\n    });\n  };\n};\nexport const insertSpace = (token, space) => {\n  return dispatch => {\n    axios.post(ASSESSMENT_SERVICE_URL + 'spaces', {\n      name: space.name,\n      description: space.description\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(\"All Good !\");\n    }).catch(error => {\n      console.log(\"error\");\n    });\n  };\n};\nexport const deleteSpace = (token, id) => {\n  return dispatch => {\n    axios.delete(ASSESSMENT_SERVICE_URL + 'spaces' + id, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};","map":{"version":3,"sources":["/home/youssouf/Desktop/Stahp/octo-assessment-main/octo-assessment-frontend-master/src/redux/space/spaceActions.js"],"names":["FETCH_SPACES_REQUEST","FETCH_SPACES_SUCCESS","FETCH_SPACES_FAILURE","INSERT_SPACES_REQUEST","INSERT_SPACES_SUCCESS","INSERT_SPACES_FAILURE","axios","ZUUL_URL","ASSESSMENT_SERVICE_URL","fetchSpacesRequest","type","fetchSpacesSuccess","spaces","payload","fetchSpacesFailure","error","insertSpacesRequest","insertSpacesSuccess","insertSpacesFailure","fetchSpaces","token","dispatch","get","headers","then","response","console","log","data","_embedded","catch","errorMsg","message","insertSpace","space","post","name","description","deleteSpace","id","delete"],"mappings":"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","sourcesContent":["import {\n    FETCH_SPACES_REQUEST,\n    FETCH_SPACES_SUCCESS,\n    FETCH_SPACES_FAILURE,\n    INSERT_SPACES_REQUEST,\n    INSERT_SPACES_SUCCESS,\n    INSERT_SPACES_FAILURE\n} from './spaceTypes';\n\nimport axios from 'axios';\nimport { ZUUL_URL, ASSESSMENT_SERVICE_URL } from '../../resources/api';\n\nconst fetchSpacesRequest = () => {\n    return {\n        type: FETCH_SPACES_REQUEST\n    }\n}\n\nconst fetchSpacesSuccess = spaces => {\n    return {\n        type: FETCH_SPACES_SUCCESS,\n        payload: spaces\n    }\n}\n\nconst fetchSpacesFailure = error => {\n    return {\n        type: FETCH_SPACES_FAILURE,\n        payload: error\n    }\n}\n\nconst insertSpacesRequest = () => {\n    return {\n        type: INSERT_SPACES_REQUEST\n    }\n}\n\nconst insertSpacesSuccess = spaces => {\n    return {\n        type: INSERT_SPACES_SUCCESS,\n        payload: spaces\n    }\n}\n\nconst insertSpacesFailure = error => {\n    return {\n        type: INSERT_SPACES_FAILURE,\n        payload: error\n    }\n}\n\nexport const fetchSpaces = (token) => {\n    return (dispatch) => {\n        debugger;\n        dispatch(fetchSpacesRequest)\n        axios\n            .get(ASSESSMENT_SERVICE_URL + 'spaces', {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n            .then(response => {\n              console.log(token);\n                const spaces = response.data._embedded.spaces;\n                dispatch(fetchSpacesSuccess(spaces));\n            })\n            .catch(error => {\n                const errorMsg = error.message;\n                dispatch(fetchSpacesFailure(errorMsg));\n            })\n    }\n}\n\nexport const insertSpace = (token, space) => {\n    return (dispatch) => {\n        axios\n            .post(ASSESSMENT_SERVICE_URL + 'spaces', {\n                name: space.name,\n                description: space.description}, {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n            .then(response => {\n                console.log(\"All Good !\");\n            })\n            .catch(error => {\n                console.log(\"error\");\n            })\n    }\n}\n\nexport const deleteSpace = (token, id) => {\n    return (dispatch) => {\n        axios\n            .delete(ASSESSMENT_SERVICE_URL + 'spaces' + id, {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n            .then(response => {\n                console.log(response);\n            })\n            .catch(error => {\n                console.log(error.message);\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}