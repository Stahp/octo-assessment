{"ast":null,"code":"import { FETCH_SPACES_REQUEST, FETCH_SPACES_SUCCESS, FETCH_SPACES_FAILURE } from './spaceTypes';\nimport axios from 'axios';\nimport { ZUUL_URL, ASSESSMENT_SERVICE_URL } from '../../resources/api';\n\nconst fetchSpacesRequest = () => {\n  return {\n    type: FETCH_SPACES_REQUEST\n  };\n};\n\nconst fetchSpacesSuccess = spaces => {\n  return {\n    type: FETCH_SPACES_SUCCESS,\n    payload: spaces\n  };\n};\n\nconst fetchSpacesFailure = error => {\n  return {\n    type: FETCH_SPACES_FAILURE,\n    payload: error\n  };\n};\n\nexport const fetchSpaces = token => {\n  return dispatch => {\n    dispatch(fetchSpacesRequest);\n    axios.get(ASSESSMENT_SERVICE_URL + 'spaces', {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(token);\n      const spaces = response.data._embedded.spaces;\n      dispatch(fetchSpacesSuccess(spaces));\n    }).catch(error => {\n      const errorMsg = error.message;\n      dispatch(fetchSpacesFailure(errorMsg));\n    });\n  };\n};\nexport const insertSpace = (token, space) => {\n  debugger;\n  return dispatch => {\n    axios.post(ASSESSMENT_SERVICE_URL + 'spaces', {\n      name: space.name,\n      description: space.description,\n      creationDate: new Date()\n    }, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(response);\n      debugger;\n    }).catch(error => {\n      console.log(error.message);\n      debugger;\n    });\n  };\n};\nexport const deleteSpace = (token, id) => {\n  return dispatch => {\n    axios.delete(ZUUL_URL + 'assessment/spaces/' + id, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(response => {\n      console.log(response);\n    }).catch(error => {\n      console.log(error.message);\n    });\n  };\n};","map":{"version":3,"sources":["/home/youssouf/Desktop/Stahp/octo-assessment-main/octo-assessment-frontend-master/src/redux/space/spaceActions.js"],"names":["FETCH_SPACES_REQUEST","FETCH_SPACES_SUCCESS","FETCH_SPACES_FAILURE","axios","ZUUL_URL","ASSESSMENT_SERVICE_URL","fetchSpacesRequest","type","fetchSpacesSuccess","spaces","payload","fetchSpacesFailure","error","fetchSpaces","token","dispatch","get","headers","then","response","console","log","data","_embedded","catch","errorMsg","message","insertSpace","space","post","name","description","creationDate","Date","deleteSpace","id","delete"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,oBAFJ,EAGIC,oBAHJ,QAIO,cAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,sBAAnB,QAAiD,qBAAjD;;AAEA,MAAMC,kBAAkB,GAAG,MAAM;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAEP;AADH,GAAP;AAGH,CAJD;;AAMA,MAAMQ,kBAAkB,GAAGC,MAAM,IAAI;AACjC,SAAO;AACHF,IAAAA,IAAI,EAAEN,oBADH;AAEHS,IAAAA,OAAO,EAAED;AAFN,GAAP;AAIH,CALD;;AAOA,MAAME,kBAAkB,GAAGC,KAAK,IAAI;AAChC,SAAO;AACHL,IAAAA,IAAI,EAAEL,oBADH;AAEHQ,IAAAA,OAAO,EAAEE;AAFN,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAClC,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACT,kBAAD,CAAR;AACAH,IAAAA,KAAK,CACAa,GADL,CACSX,sBAAsB,GAAG,QADlC,EAC4C;AACpCY,MAAAA,OAAO,EAAE;AACL,yBAAiB,UAASH,KAAM;AAD3B;AAD2B,KAD5C,EAMKI,IANL,CAMUC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACE,YAAML,MAAM,GAAGU,QAAQ,CAACG,IAAT,CAAcC,SAAd,CAAwBd,MAAvC;AACAM,MAAAA,QAAQ,CAACP,kBAAkB,CAACC,MAAD,CAAnB,CAAR;AACH,KAVL,EAWKe,KAXL,CAWWZ,KAAK,IAAI;AACZ,YAAMa,QAAQ,GAAGb,KAAK,CAACc,OAAvB;AACAX,MAAAA,QAAQ,CAACJ,kBAAkB,CAACc,QAAD,CAAnB,CAAR;AACH,KAdL;AAeH,GAjBD;AAkBH,CAnBM;AAqBP,OAAO,MAAME,WAAW,GAAG,CAACb,KAAD,EAAQc,KAAR,KAAkB;AAC3C;AACE,SAAQb,QAAD,IAAc;AACjBZ,IAAAA,KAAK,CACA0B,IADL,CACUxB,sBAAsB,GAAG,QADnC,EAC6C;AACrCyB,MAAAA,IAAI,EAAEF,KAAK,CAACE,IADyB;AAErCC,MAAAA,WAAW,EAAEH,KAAK,CAACG,WAFkB;AAGrCC,MAAAA,YAAY,EAAE,IAAIC,IAAJ;AAHuB,KAD7C,EAKO;AACChB,MAAAA,OAAO,EAAE;AACL,yBAAiB,UAASH,KAAM;AAD3B;AADV,KALP,EAUKI,IAVL,CAUUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACE;AACL,KAbL,EAcKK,KAdL,CAcWZ,KAAK,IAAI;AACZQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACc,OAAlB;AACE;AACL,KAjBL;AAkBH,GAnBD;AAoBH,CAtBM;AAwBP,OAAO,MAAMQ,WAAW,GAAG,CAACpB,KAAD,EAAQqB,EAAR,KAAe;AACtC,SAAQpB,QAAD,IAAc;AACjBZ,IAAAA,KAAK,CACAiC,MADL,CACYhC,QAAQ,GAAG,oBAAX,GAAkC+B,EAD9C,EACkD;AAC1ClB,MAAAA,OAAO,EAAE;AACL,yBAAiB,UAASH,KAAM;AAD3B;AADiC,KADlD,EAMKI,IANL,CAMUC,QAAQ,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACH,KARL,EASKK,KATL,CASWZ,KAAK,IAAI;AACZQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACc,OAAlB;AACH,KAXL;AAYH,GAbD;AAcH,CAfM","sourcesContent":["import {\n    FETCH_SPACES_REQUEST,\n    FETCH_SPACES_SUCCESS,\n    FETCH_SPACES_FAILURE\n} from './spaceTypes';\nimport axios from 'axios';\nimport { ZUUL_URL, ASSESSMENT_SERVICE_URL } from '../../resources/api';\n\nconst fetchSpacesRequest = () => {\n    return {\n        type: FETCH_SPACES_REQUEST\n    }\n}\n\nconst fetchSpacesSuccess = spaces => {\n    return {\n        type: FETCH_SPACES_SUCCESS,\n        payload: spaces\n    }\n}\n\nconst fetchSpacesFailure = error => {\n    return {\n        type: FETCH_SPACES_FAILURE,\n        payload: error\n    }\n}\n\nexport const fetchSpaces = (token) => {\n    return (dispatch) => {\n        dispatch(fetchSpacesRequest)\n        axios\n            .get(ASSESSMENT_SERVICE_URL + 'spaces', {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n            .then(response => {\n              console.log(token);\n                const spaces = response.data._embedded.spaces;\n                dispatch(fetchSpacesSuccess(spaces));\n            })\n            .catch(error => {\n                const errorMsg = error.message;\n                dispatch(fetchSpacesFailure(errorMsg));\n            })\n    }\n}\n\nexport const insertSpace = (token, space) => {\n  debugger;\n    return (dispatch) => {\n        axios\n            .post(ASSESSMENT_SERVICE_URL + 'spaces', {\n                name: space.name,\n                description: space.description,\n                creationDate: new Date()\n            }, {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n            .then(response => {\n                console.log(response);\n                  debugger;\n            })\n            .catch(error => {\n                console.log(error.message);\n                  debugger;\n            })\n    }\n}\n\nexport const deleteSpace = (token, id) => {\n    return (dispatch) => {\n        axios\n            .delete(ZUUL_URL + 'assessment/spaces/' + id, {\n                headers: {\n                    'Authorization':`Bearer ${token}`\n                }\n            })\n            .then(response => {\n                console.log(response);\n            })\n            .catch(error => {\n                console.log(error.message);\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}