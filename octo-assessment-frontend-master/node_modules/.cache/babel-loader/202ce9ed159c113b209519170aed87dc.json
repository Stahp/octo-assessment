{"ast":null,"code":"import { LOGIN } from './authTypes';\nimport Keycloak from 'keycloak-js';\nimport { keycloakConfig } from '../../resources/keycloakConfig';\nconst keycloak = new Keycloak(keycloakConfig);\n\nconst login = kc => {\n  return {\n    type: LOGIN,\n    payload: kc\n  };\n};\n\nexport const keycloakAuth = () => {\n  return dispatch => {\n    keycloak.init({\n      onLoad: 'login-required',\n      promiseType: 'native'\n    }).then(authenticated => {\n      dispatch(login(keycloak));\n    }).catch(error => {\n      console.log('KeycloakAuth catch section ...');\n    });\n  };\n};","map":{"version":3,"sources":["/home/youssouf/Desktop/Stahp/octo-assessment-main/octo-assessment-frontend-master/src/redux/auth/authActions.js"],"names":["LOGIN","Keycloak","keycloakConfig","keycloak","login","kc","type","payload","keycloakAuth","dispatch","init","onLoad","promiseType","then","authenticated","catch","error","console","log"],"mappings":"AAAA,SAASA,KAAT,QAAsB,aAAtB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,cAAT,QAA+B,gCAA/B;AAEA,MAAMC,QAAQ,GAAG,IAAIF,QAAJ,CAAaC,cAAb,CAAjB;;AAEA,MAAME,KAAK,GAAGC,EAAE,IAAI;AAChB,SAAO;AACHC,IAAAA,IAAI,EAAEN,KADH;AAEHO,IAAAA,OAAO,EAAEF;AAFN,GAAP;AAIH,CALD;;AAOA,OAAO,MAAMG,YAAY,GAAG,MAAM;AAC9B,SAAQC,QAAD,IAAc;AACjBN,IAAAA,QAAQ,CAACO,IAAT,CAAc;AACVC,MAAAA,MAAM,EAAE,gBADE;AAEVC,MAAAA,WAAW,EAAE;AAFH,KAAd,EAGGC,IAHH,CAGQC,aAAa,IAAI;AACrBL,MAAAA,QAAQ,CAACL,KAAK,CAACD,QAAD,CAAN,CAAR;AACH,KALD,EAKGY,KALH,CAKSC,KAAK,IAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,KAPD;AAQH,GATD;AAUH,CAXM","sourcesContent":["import { LOGIN } from './authTypes';\nimport Keycloak from 'keycloak-js';\nimport { keycloakConfig } from '../../resources/keycloakConfig';\n\nconst keycloak = new Keycloak(keycloakConfig);\n\nconst login = kc => {\n    return {\n        type: LOGIN,\n        payload: kc\n    }\n}\n\nexport const keycloakAuth = () => {\n    return (dispatch) => {\n        keycloak.init({\n            onLoad: 'login-required',\n            promiseType: 'native'\n        }).then(authenticated => {\n            dispatch(login(keycloak))    \n        }).catch(error => {\n            console.log('KeycloakAuth catch section ...')\n        });\n    }\n}"]},"metadata":{},"sourceType":"module"}